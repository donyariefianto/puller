<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>MQTT World</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>High Voltages - MQTT</title>
    <link rel="stylesheet" href="style.css">
    {{--  <script src="https://unpkg.com/mqtt@5.0.2/dist/mqtt.min.js" type="text/javascript"></script>  --}}
    <script src="https://unpkg.com/mqtt/dist/mqtt.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div>
        <canvas id="myChart"></canvas>
    </div>
</body>
</html>

<script>
    const ctx = document.getElementById('myChart');
    var label = [],data_value=[]
    
    var chrt = new Chart(ctx, {
        type: 'line',
        data: {
        labels: label,
        datasets: [{
              fillColor: "rgba(220,220,220,0.2)",
              strokeColor: "rgba(220,220,220,1)",
              pointColor: "rgba(220,220,220,1)",
              pointStrokeColor: "#fff",
              data: data_value,
              tension: 0.1
          }]
        },
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        },
        }
    });
    const opsi = {
        clean: true, // retain session
        connectTimeout: 4000, // Timeout period
        // Authentication information
        clientId: 'emqx_test',
        username: '3ny9m4',
        password: '3ny9m4.iop2023',
    }
    setInterval(function(){
        const i = Math.round(Math.random())*(Math.random() * 100)
        label.push(i)
        data_value.push(i)
        chrt.update();
    }, 1000);
    const client = mqtt.connect('ws://103.87.149.19:9001/said',opsi)
    const topic = 'topic/name';
    const message = 'test message';
    client.on('connect', function () {
        console.log('Connected')
        // client.subscribe('test', function (err) {
        //     if (!err) {
        //     // Publish a message to a topic
        //     client.publish('test', 'Hello mqtt')
        //     }
        // })
        client.subscribe('test')
    })

    client.on('reconnect', (error) => {
        console.log('reconnecting:', error.message)
    })

    client.on('error', (error) => {
        console.log('Connection failed:', error)
    })

    client.on('message', (topic, message) => {
        // console.log('receive messageï¼š', topic, message.toString())
        var data = JSON.parse(message.toString())
        chrt.data.datasets[0].data[0] = 50;
        chrt.update();
        console.log(data);
    })
    
</script>